#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off

yabai -m config window_placement             second_child

yabai -m config window_shadow                on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.2
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90

yabai -m config split_ratio                  0.50

yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config auto_balance                 off

yabai -m config mouse_modifier               cmd
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  10
yabai -m config bottom_padding               10
yabai -m config left_padding                 10
yabai -m config right_padding                10
yabai -m config window_gap                   10

# float system prefs
yabai -m rule --add app='^System Preferences$' manage=off
yabai -m rule --add app='^System Information$' manage=off
yabai -m rule --add title='Preferences$' manage=off

# float BTT prefs
yabai -m rule --add title="^BetterTouchTool$" manage=off

# float any settings windows
yabai -m rule --add title="Settings$" manage=off

# float Cisco AnyConnect
yabai -m rule --add app='^Cisco AnyConnect Secure Mobility Client$' manage=off

# float only main IntelliJ window
yabai -m rule --add app='IntelliJ IDEA' manage=off
yabai -m rule --add app='IntelliJ IDEA' title='( â€“ )' manage=on

# float JetBrains toolbox
yabai -m rule --add app='JetBrains Toolbox' manage=off

# float JetBrains gateway
yabai -m rule --add app='JetBrains Gateway$' manage=off

# float activity monitor
yabai -m rule --add app='^Activity Monitor$' manage=off

# float outlook meeting reminders
yabai -m rule --add app='^Microsoft Outlook$' title!='(^Calendar)|(yehyeh@amazon.com$)' manage=off

# float finder
yabai -m rule --add app='^Finder$' manage=off

# float friendly streaming ops
yabai -m rule --add app='^Friendly Streaming$' title='Untitled' manage=off

# float connections
yabai -m rule --add title='^Connections$' manage=off

# float vysor
yabai -m rule --add app='Vysor' manage=off

# float calculator
yabai -m rule --add app='Calculator' manage=off

# float dictionary
yabai -m rule --add app='Dictionary' manage=off

# float AWB
yabai -m rule --add app='^AWB$' manage=off

# float CIQ simulator
yabai -m rule --add title='CIQ Simulator' manage=off

# full screen DCV
#yabai -m rule --add app='DCV Viewer' native-fullscreen=on

# set up menu bar padding (24 is the default menu bar height)
BAR_HEIGHT=$(sketchybar --query bar | jq .height)
yabai -m config external_bar all:$BAR_HEIGHT:0

# sketchybar events
yabai -m signal --add event=window_focused action="sketchybar -m --trigger window_focus &> /dev/null"
yabai -m signal --add event=window_title_changed action="sketchybar -m --trigger title_change &> /dev/null"
yabai -m signal --add event=window_created action="sketchybar -m --trigger window_created &> /dev/null"
yabai -m signal --add event=window_destroyed action="sketchybar -m --trigger window_destroyed &> /dev/null"

# hack rule to not tile non-resizeable windows (preferences, etc.)
yabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float'

# hack rule to float created Arc windows (specifically for Little Arc)
#yabai -m signal --add event=window_created app="Arc" action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float'

# instead of the hack above, just don't float all Arc windows and manually tile them when opened
yabai -m rule --add app='Arc' manage=off

# Limelight addon (Kill it and start it each time Yabai starts)
#killall limelight &>/dev/null
#limelight &>/dev/null &

echo "yabai configuration loaded successfully!"
